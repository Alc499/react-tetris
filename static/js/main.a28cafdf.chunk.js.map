{"version":3,"sources":["gameHelpers.js","components/Styles/StyledTetris.js","tetrominos.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useStage.js","components/Styles/StyledStage.js","components/Styles/StyledCell.js","components/Cell.js","components/Stage.js","components/Styles/StyledDisplay.js","components/Display.js","components/Styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/useInterval.js","App.js","index.js","img/bwlfp7b078w0-background.jpg"],"names":["createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","position","StyledTetrisWrapper","styled","div","_templateObject","bgImage","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","usePlayer","_useState","useState","collided","_useState2","Object","slicedToArray","setPlayer","rotate","matrix","direction","rotatedTetro","map","row","index","col","reverse","resetPlayer","useCallback","STAGE_WIDTH","prevState","_objectSpread","clonedPlayer","offset","useGameStatus","rowsCleared","score","setScore","_useState3","_useState4","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useEffect","useStage","setStage","setRowsCleared","updateStage","newStage","cell","forEach","value","concat","reduce","acc","findIndex","prev","unshift","push","sweepRows","prevStage","StyledStage","StyledStage_templateObject","height","_ref2","width","_ref3","StyledCell","StyledCell_templateObject","type","_ref4","_ref5","_ref6","React","memo","react_default","a","createElement","Stage","i","components_Cell","key","StyledDisplay","StyledDisplay_templateObject","gameOver","Display","text","StyledStartButton","button","StyledStartButton_templateObject","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","_useGameStatus2","movePlayer","drop","prevLevel","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","components_Stage","components_Display","components_StartButton","App","className","components_Tetris","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a28cafdf.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () => (\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n  )\r\n);\r\n\r\nexport const checkCollision = (\r\n  player, \r\n  stage, \r\n  { x: moveX, y: moveY },\r\n) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      if (player.tetromino[y][x] === 0) {\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        !stage[y + player.position.y + moveY] || \r\n        !stage[y + player.position.y + moveY][x + player.position.x + moveX] ||\r\n        stage[y + player.position.y + moveY][x + player.position.x + moveX][1] !== 'clear'\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n};","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/bwlfp7b078w0-background.jpg';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage});\r\n  background-size: cover;\r\n  overflow: hidden;\r\n  outline: none;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 300px;\r\n    display: block;\r\n    padding: 0 20px;\r\n    margin-left: auto;\r\n  }\r\n`\r\n\r\n","export const TETROMINOS = {\r\n  0: {shape: [[0]], color: '0, 0, 0'},\r\n  I: {\r\n    shape: [\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n          ],\r\n    color: '80, 227, 230'\r\n  },\r\n  J: {\r\n    shape: [\r\n            [0, 'J', 0],\r\n            [0, 'J', 0],\r\n            ['J', 'J', 0],\r\n          ],\r\n    color: '36, 95, 223'\r\n  },\r\n  L: {\r\n    shape: [\r\n            [0, 'L', 0],\r\n            [0, 'L', 0],\r\n            [0, 'L', 'L'],\r\n          ],\r\n    color: '223, 173, 36'\r\n  },\r\n  O: {\r\n    shape: [\r\n            ['O', 'O'],\r\n            ['O', 'O'],\r\n          ],\r\n    color: '223, 217, 36'\r\n  },\r\n  S: {\r\n    shape: [\r\n            [0, 'S', 'S'],\r\n            ['S', 'S', 0],\r\n            [0, 0, 0],\r\n          ],\r\n    color: '48, 211, 56'\r\n  },\r\n  T: {\r\n    shape: [\r\n            ['T', 'T', 'T'],\r\n            [0, 'T', 0],\r\n            [0, 0, 0],\r\n          ],\r\n    color: '132, 61, 198'\r\n  },\r\n  Z: {\r\n    shape: [\r\n            ['Z', 'Z', 0],\r\n            [0, 'Z', 'Z'],\r\n            [0, 0, 0],\r\n          ],\r\n    color: '227, 78, 78'\r\n  },\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'IJLOSTZ';\r\n  const randTetromino = tetrominos[Math.floor(\r\n    Math.random() * tetrominos.length\r\n  )];\r\n\r\n  return TETROMINOS[randTetromino];\r\n}","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nconst usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    position: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const rotate = (matrix, direction) => {\r\n    const rotatedTetro = matrix.map((row, index) => (\r\n      matrix.map(col => (\r\n        col[index]\r\n    ))));\r\n\r\n    if (direction > 0) {\r\n      return rotatedTetro.map(row => row.reverse());\r\n    }\r\n\r\n    return rotatedTetro.reverse()\r\n  }\r\n\r\n  const playerRotate = (stage, direction) => {\r\n    const clonedPlayer = {...player};\r\n     clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, direction);\r\n\r\n     const position = clonedPlayer.position.x;\r\n     let offset = 1;\r\n\r\n     while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n       clonedPlayer.position.x += offset;\r\n       offset = -(offset + (offset > 0 ? 1 : -1));\r\n\r\n       if (offset > clonedPlayer.tetromino[0].length) {\r\n         rotate(clonedPlayer.tetromino, -direction);\r\n\r\n         clonedPlayer.position.x = position;\r\n         return;\r\n       }\r\n     }\r\n\r\n     setPlayer(clonedPlayer);\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prevState => ({\r\n      ...prevState,\r\n      position: { \r\n        x: (prevState.position.x += x), \r\n        y: (prevState.position.y += y),\r\n      },\r\n      collided,\r\n    }))\r\n  }\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      position: {\r\n        x: STAGE_WIDTH / 2 - 2,\r\n        y: 0,\r\n      },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    })\r\n  }, []);\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n}\r\n\r\nexport default usePlayer;","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useGameStatus = (rowsCleared) => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n    if (rowsCleared > 0) {\r\n      setScore(prevState => prevState + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prevState => prevState + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n\r\nexport default useGameStatus;","import { useState, useEffect } from 'react';\r\n\r\nimport { createStage } from '../gameHelpers';\r\n\r\nconst useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = newStage => (\r\n      newStage.reduce((acc, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1);\r\n          acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return acc;\r\n        }\r\n\r\n        acc.push(row);\r\n        return acc;\r\n      }, [])\r\n    )\r\n\r\n    const updateStage = stage => {\r\n      const newStage = stage.map(row => (\r\n        row.map(cell => (\r\n          cell[1] === 'clear' ? [0, 'clear'] : cell\r\n        )))\r\n      );\r\n\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.position.y][x + player.position.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n\r\n    setStage(prevStage => updateStage(prevStage))\r\n  }, [player, resetPlayer]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};\r\n\r\nexport default useStage;","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${({ height }) => height},\r\n    calc(25vw / ${({ width }) => width})\r\n  );\r\n  grid-template-columns: repeat(\r\n    ${({ width }) => width}, \r\n    1fr\r\n  );\r\n\r\n  grid-gap: 1px;\r\n  border: 2px solid #050aa4;\r\n  width: 100%;\r\n  max-width: 25vw;\r\n  background: #010224;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  background: rgba(${({ color }) => color}, 0.8);\r\n  border: ${({ type }) => type === 0 ? '0px solid' : '4px solid'};\r\n  border-bottom-color: rgba(${({ color }) => color}, 0.1);\r\n  border-right-color: rgba(${({ color }) => color}, 1);\r\n  border-top-color: rgba(${({ color }) => color}, 1);\r\n  border-left-color: rgba(${({ color }) => color}, 0.3);\r\n`","import React from 'react';\r\nimport { StyledCell } from './Styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nimport './Styles/StyledCell.js';\r\n\r\nconst Cell = ({ type }) => (\r\n  <StyledCell type={type} color={TETROMINOS[type].color} />\r\n);\r\n\r\nexport default React.memo(Cell);","import React from 'react';\r\n\r\nimport { StyledStage } from './Styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map(row => (\r\n      row.map((cell, i) => \r\n        <Cell key={i} type={cell[0]} />\r\n    )))}\r\n  </StyledStage>\r\n);\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n\r\n  min-height: 30px;\r\n  width: 100%;\r\n\r\n  border: 4px solid #020336;\r\n  border-radius: 20px;\r\n\r\n  color: ${({gameOver}) => gameOver ? 'red' : '#999'};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n`","import React from 'react';\r\n\r\nimport { StyledDisplay } from './Styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n  <StyledDisplay gameOver={gameOver}>\r\n    {text}\r\n  </StyledDisplay>\r\n);\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n\r\n  min-height: 30px;\r\n  width: 100%;\r\n\r\n  border: none;\r\n  border-radius: 20px;\r\n\r\n  color: #fff;\r\n  background: #020336;\r\n\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n\r\n  outline: none;\r\n  cursor: pointer;\r\n`","import React from 'react';\r\n\r\nimport { StyledStartButton } from './Styles/StyledStartButton'\r\n\r\nconst StartButton = ({ callback }) => (\r\n  <StyledStartButton onClick={callback}>\r\n    Start Game\r\n  </StyledStartButton>\r\n);\r\n\r\nexport default StartButton;","import React, { useState } from 'react';\r\n\r\nimport { createStage, checkCollision } from '../gameHelpers'\r\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris';\r\n\r\nimport { useInterval } from '../hooks/useInterval'\r\nimport usePlayer from '../hooks/usePlayer';\r\nimport useGameStatus from '../hooks/useGameStatus';\r\nimport useStage from '../hooks/useStage';\r\n\r\n\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton'\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n  const movePlayer = (direction) => {\r\n    if (checkCollision(player, stage, { x: direction, y: 0 })) {\r\n      return;\r\n    }\r\n\r\n    updatePlayerPos({ x: direction, y: 0 });\r\n  }\r\n\r\n  const startGame = () => {\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setLevel(0);\r\n    setRows(0);\r\n  }\r\n\r\n  const drop = () => {\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel(prevLevel => prevLevel + 1);\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });   \r\n    } else {\r\n      if (player.position.y < 1) {\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  }\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (gameOver) {\r\n      return;\r\n    }\r\n\r\n    if (keyCode === 40) {\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n  }\r\n\r\n  const dropPlayer = () => {\r\n    setDropTime(null);\r\n    drop();\r\n  }\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (gameOver) {\r\n      return;\r\n    }\r\n\r\n    switch(keyCode) {\r\n      case 37:\r\n        movePlayer(-1);\r\n        break;\r\n      case 39:\r\n        movePlayer(1);\r\n        break;\r\n      case 40:\r\n        dropPlayer();\r\n        break;\r\n      case 38:\r\n        playerRotate(stage, 1);\r\n        break;\r\n    }\r\n  }\r\n\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime)\r\n\r\n  return (\r\n    <StyledTetrisWrapper \r\n      role=\"button\" \r\n      tabIndex=\"0\" \r\n      onKeyDown={e => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text=\"Game Over\" />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`Rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from 'react';\n\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/bwlfp7b078w0-background.dcd9ec77.jpg\";"],"sourceRoot":""}